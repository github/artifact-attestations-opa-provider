apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8sexternaldatafromrepo
spec:
  crd:
    spec:
      names:
        kind: K8sExternalDataFromRepo
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sexternaldata

        violation[{"msg": msg}] {
          images := [img | img = input.review.object.spec.containers[_].image]

          response := external_data({"provider": "artifact-attestations-opa-provider", "keys": images})

          response_with_error(response)

          msg := sprintf("invalid response: %v", [response])
        }

        response_with_error(response) {
          count(response.errors) > 0
          errs := response.errors[_]
          contains(errs[1], "_unsigned")
        }

        response_with_error(response) {
          count(response.system_error) > 0
        }

        response_with_error(response) {
          not fromRepo(response, ["your-org-1/a-repo-1", "your-org-2/a-repo-2"])
        }

        fromRepo(resp, repos) {
          some i, j, k, l
          uri := resp.responses[i][j][k].signature.certificate.sourceRepositoryURI
          # Prefix the repo name with / before doing comparisson
          endswith(uri, concat("", ["/", repos[l]]))
        }
